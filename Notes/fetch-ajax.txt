function prom()
        //function returns a promise
        {
            return new Promise(function(resolve, reject)
            //taking resolve and reject as parameters 
            {
            console.log("fetching data, please wait");
 
       setTimeout( () => {
        $.get("https://jsonplaceholder.typicode.com/posts",
        function(data)
          {
              resolve(data);
              //calling resolve function
           }).fail(err => {
              //integrating error message
              reject("failed to load json")
          });
        }, 1000)
          
      });
    }
//function Prom() ends 
prom().then((result) => {
        console.log(result)
    }).catch((error) => {
        console.log(error)
    });




--------------------------------------------------


// create XHR object 
var xhttp = new XMLHttpRequest()

// once we get server response, set it in our HTML DOM 
xhttp.onreadystatechange = function() {
    if(this.readyState == 4 && this.status == 200){
        document.getElementById('demo').innerHTML = this.responseText
        
    }
}
//response sent by the server can be either: responseText or responseXML 
//only demo div will be refreshed 

//xhttp.open('mode of file (GET/POST)', 'file name' async mode)
xhttp.open('GET', 'filename.txt', true)

//send the request to server 
xhttp.send()



-----------------------------------------------------




fetch(file / URL).then( function(response) {
    return response.data()
    //data types:
    //1. json 
    //2. text 
    //3. blob 
    
}).then(function(result){
    //when promise is returned succesfully, response.data is logged inside result variable 
    console.log(result)
    
}).catch(function(error){
    //when promise is failed 
    console.log(error)
})
-----------------------------------------------------



 
fetch(file/URL, {
        method: "POST" --> PUT, DELETE, GET(default)
        body: data -> Data, JSON Data, Text
        header:{
                'content-type': 'application/json',
                }
}) 
.then((res) => res.json())
.then((data) => console.log(data)
.catch((error) => console.log(error);



